name: Continuous integration

on:
  push:
    branches:
      - master

concurrency: master

jobs:
  quality-assurance:
    name: Quality Assurance
    uses: ./.github/workflows/pr.yml

  publish-images:
    name: Publish docker images
    needs: quality-assurance
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push core image to Github Packages
        # TODO(dmu) LOW: Consider migration to docker/build-push-action@v3 and buildx
        uses: docker/build-push-action@v2
        with:
          tags: ghcr.io/thenewboston-developers/core:latest
          push: true
      - name: Push core-reverse-proxy image to Github Packages
        # TODO(dmu) LOW: Consider migration to docker/build-push-action@v3 and buildx
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile-reverse-proxy
          tags: ghcr.io/thenewboston-developers/core-reverse-proxy:latest
          push: true
  deploy:
    name: Deploy
    environment: production
    needs: publish-images
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        # TODO(dmu) MEDIUM: Refactor once/if github implements secrets on job level
        #                   https://github.com/actions/runner/issues/520#issuecomment-877193387
        if: ${{ env.CONTINUOUS_DEPLOYMENT_ENABLED == 'True' }}
        run: |
          mkdir -p ~/.ssh/
          echo "$DEPLOY_SSH_KEY" > ~/.ssh/github
          chmod 600 ~/.ssh/github
          cat >>~/.ssh/config <<END
          Host target
            HostName $DEPLOY_SSH_HOST
            User $DEPLOY_SSH_USER
            IdentityFile ~/.ssh/github
            LogLevel ERROR
            StrictHostKeyChecking no
          END
        env:
          CONTINUOUS_DEPLOYMENT_ENABLED: ${{ secrets.CONTINUOUS_DEPLOYMENT_ENABLED }}
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
          DEPLOY_SSH_HOST: ${{ secrets.DEPLOY_SSH_HOST }}
          DEPLOY_SSH_USER: ${{ secrets.DEPLOY_SSH_USER }}

      - name: Run deploy
        # TODO(dmu) MEDIUM: Refactor once/if github implements secrets on job level
        #                   https://github.com/actions/runner/issues/520#issuecomment-877193387
        if: ${{ env.CONTINUOUS_DEPLOYMENT_ENABLED == 'True' }}
        # We need to deploy from GitHub because the image is guarantied to be ready by the moment of the deployment
        run: |
          ssh target "docker system prune --all --force && wget https://raw.githubusercontent.com/thenewboston-developers/Core/master/scripts/deploy.sh -O /tmp/deploy-core.sh && chmod a+x /tmp/deploy-core.sh && export GITHUB_USERNAME=${{ github.actor }} && export GITHUB_PASSWORD=${{ secrets.GITHUB_TOKEN }} && export CORESETTING_CORE_DOMAIN=thenewboston.network && export CERTBOT_EMAIL=dmugtasimov@gmail.com && export DOCKER_REGISTRY_HOST=ghcr.io && /tmp/deploy-core.sh && rm -f /tmp/deploy-core.sh"
        env:
          CONTINUOUS_DEPLOYMENT_ENABLED: ${{ secrets.CONTINUOUS_DEPLOYMENT_ENABLED }}
